version: 0.2

env:
    variables:
        AWS_DEFAULT_REGION: "eu-central-1"
        AWS_ACCOUNT_ID: "050266116122"
        IMAGE_REPO_NAME: "emo-classifier"

phases:
    install:
        runtime-versions:
            python: 3.9
        commands:
            - aws s3 cp s3://stdiff/dvc/binary/dvc_2.8.3_amd64.deb /tmp/dvc_2.8.3_amd64.deb
            - dpkg -i /tmp/dvc_2.8.3_amd64.deb
            - dvc pull
            - curl -sSL https://install.python-poetry.org | python3 - --version 1.1.11
            - export PATH=/root/.local/bin:$PATH
            - poetry env use system
            - poetry install
            - export VERSION=$(poetry version -s).$CODEBUILD_BUILD_NUMBER
            - poetry version $VERSION
    pre_build:
        commands:
            - poetry run black --check */*.py */*/*.py
            - dvc repro
            - poetry run pytest
            - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
    build:
        commands:
            - poetry build
            - docker build --build-arg VERSION=$VERSION -t emo-classifier:$VERSION .
            - docker tag emo-classifier:$VERSION $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$VERSION
    post_build:
        commands:
            - cp notebook/error_analysis.html dist/error_analysis-$VERSION.html
            - mv dist $VERSION
            - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$VERSION
artifacts:
    files:
        - $VERSION/emo_classifier-*-py3-none-any.whl
        - $VERSION/error_analysis-$VERSION.html
